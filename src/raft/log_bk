Running TestSnapshotInstall3D
== Round 1 start ==
=== RUN   TestSnapshotInstall3D
Test (3D): install snapshots (disconnect) ...
node 0 wait for 1.051283489s
node 0 start leader election retry: 1
node 0 request vote RPC to 1 arg term 1 last index -1 last term -1
node 0 request vote RPC to 2 arg term 1 last index -1 last term -1
node 2 get request vote from 0 term 1 current term 0 last log index -1 last log term -1
node 1 get request vote from 0 term 1 current term 0 last log index -1 last log term -1
node 2 grant request vote from 0 term 1
node 1 grant request vote from 0 term 1
node 0 get vote from 2
node 0 get vote from 1
candidate 0 get vote 1
candidate 0 voteFor -2 current term 1 arg term 1
node 0 become leader
leader 0 term 1 broadcast heartbeat 1
leader 0 append log to server 1 prev index -1 entries [], retry 1
leader 0 append log to server 2 prev index -1 entries [], retry 1
node 1 get append entry from 0 current term 1 arg term 1 rf commit -1 commit index -1 prev index -1 logs []
node 1 get valid append entry from 0
node 2 get append entry from 0 current term 1 arg term 1 rf commit -1 commit index -1 prev index -1 logs []
node 2 get valid append entry from 0
node 1 grant append rpc from 0, commit index -1, rf last included index -1 term -1, log []
node 2 grant append rpc from 0, commit index -1, rf last included index -1 term -1, log []
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit -1 raft commit index -1
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit -1 raft commit index -1
leader 0 append entry 0 command 0
index 0
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
leader 0 append log to server 1 prev index -1 entries [{0 1}], retry 1
leader 0 append log to server 2 prev index -1 entries [{0 1}], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit -1 commit index -1 prev index -1 logs [{0 1}]
node 2 get valid append entry from 0
node 1 get append entry from 0 current term 1 arg term 1 rf commit -1 commit index -1 prev index -1 logs [{0 1}]
node 1 get valid append entry from 0
node 2 append log from 0 args(i) 0 self(j) 0
node 1 append log from 0 args(i) 0 self(j) 0
node 2 append log from 0 log [{0 1}]
node 2 grant append rpc from 0, commit index -1, rf last included index -1 term -1, log [{0 1}]
node 1 append log from 0 log [{0 1}]
node 1 grant append rpc from 0, commit index -1, rf last included index -1 term -1, log [{0 1}]
leader 0 append log index 0 to server 2 success, retry 1
node 0 try to commit 0 raft commit index -1
node 0 commit index 0 log 0
leader 0 append log index 0 to server 1 success, retry 1
node 0 try to commit 0 raft commit index 0
applier get log {true 0 1 false [] 0 0} i 0
write cfg.log[0][1] 0
err_msg 
prevok false
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
leader 0 term 1 broadcast heartbeat 2
leader 0 append log to server 1 prev index 0 entries [], retry 1
leader 0 append log to server 2 prev index 0 entries [], retry 1
node 1 get append entry from 0 current term 1 arg term 1 rf commit -1 commit index 0 prev index 0 logs []
node 1 get valid append entry from 0
node 2 get append entry from 0 current term 1 arg term 1 rf commit -1 commit index 0 prev index 0 logs []
node 2 get valid append entry from 0
node 1 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
node 1 commit index 0 log 0
node 2 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
node 2 commit index 0 log 0
applier get log {true 0 1 false [] 0 0} i 1
write cfg.log[1][1] 0
err_msg 
prevok false
applier get log {true 0 1 false [] 0 0} i 2
write cfg.log[2][1] 0
err_msg 
prevok false
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 0 raft commit index 0
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 0 raft commit index 0
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
leader 0 term 1 broadcast heartbeat 3
leader 0 append log to server 2 prev index 0 entries [], retry 1
leader 0 append log to server 1 prev index 0 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 2 get valid append entry from 0
node 1 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 2 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
node 1 get valid append entry from 0
node 1 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 0 raft commit index 0
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 0 raft commit index 0
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
leader 0 term 1 broadcast heartbeat 4
leader 0 append log to server 1 prev index 0 entries [], retry 1
leader 0 append log to server 2 prev index 0 entries [], retry 1
node 1 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 1 get valid append entry from 0
node 2 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 2 get valid append entry from 0
node 1 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
node 2 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 0 raft commit index 0
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 0 raft commit index 0
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
leader 0 term 1 broadcast heartbeat 5
leader 0 append log to server 2 prev index 0 entries [], retry 1
leader 0 append log to server 1 prev index 0 entries [], retry 1
node 1 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 1 get valid append entry from 0
node 2 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 2 get valid append entry from 0
node 1 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
node 2 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 0 raft commit index 0
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 0 raft commit index 0
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
leader 0 term 1 broadcast heartbeat 6
leader 0 append log to server 1 prev index 0 entries [], retry 1
leader 0 append log to server 2 prev index 0 entries [], retry 1
node 1 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 1 get valid append entry from 0
node 2 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs []
node 2 get valid append entry from 0
node 1 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
node 2 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1}]
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 0 raft commit index 0
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 0 raft commit index 0
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
check cfg.log[0][0] <nil>
check cfg.log[1][0] <nil>
check cfg.log[2][0] <nil>
commit time 2.018120285s
judge retry one(0)
leader 0 append entry 1 command 0
index 1
check cfg.log[0][1] 0
check cfg.log[1][1] 0
check cfg.log[2][1] 0
leader 0 append log to server 1 prev index 0 entries [{0 1}], retry 1
leader 0 append log to server 2 prev index 0 entries [{0 1}], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs [{0 1}]
node 2 get valid append entry from 0
node 1 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 0 prev index 0 logs [{0 1}]
node 1 get valid append entry from 0
node 2 append log from 0 args(i) 0 self(j) 1
node 1 append log from 0 args(i) 0 self(j) 1
node 2 append log from 0 log [{0 1} {0 1}]
node 1 append log from 0 log [{0 1} {0 1}]
node 1 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1} {0 1}]
node 2 grant append rpc from 0, commit index 0, rf last included index -1 term -1, log [{0 1} {0 1}]
leader 0 append log index 1 to server 2 success, retry 1
node 0 try to commit 1 raft commit index 0
node 0 commit index 1 log 0
applier get log {true 0 2 false [] 0 0} i 0
write cfg.log[0][2] 0
err_msg 
prevok true
leader 0 append log index 1 to server 1 success, retry 1
node 0 try to commit 1 raft commit index 1
leader 0 term 1 broadcast heartbeat 7
leader 0 append log to server 2 prev index 1 entries [], retry 1
leader 0 append log to server 1 prev index 1 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 1 prev index 1 logs []
node 2 get valid append entry from 0
node 1 get append entry from 0 current term 1 arg term 1 rf commit 0 commit index 1 prev index 1 logs []
node 1 get valid append entry from 0
node 2 grant append rpc from 0, commit index 1, rf last included index -1 term -1, log [{0 1} {0 1}]
node 2 commit index 1 log 0
node 1 grant append rpc from 0, commit index 1, rf last included index -1 term -1, log [{0 1} {0 1}]
applier get log {true 0 2 false [] 0 0} i 2
node 1 commit index 1 log 0
write cfg.log[2][2] 0
err_msg 
prevok true
applier get log {true 0 2 false [] 0 0} i 1
write cfg.log[1][2] 0
err_msg 
prevok true
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 1 raft commit index 1
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 1 raft commit index 1
leader 0 term 1 broadcast heartbeat 8
leader 0 append log to server 1 prev index 1 entries [], retry 1
leader 0 append log to server 2 prev index 1 entries [], retry 1
node 1 get append entry from 0 current term 1 arg term 1 rf commit 1 commit index 1 prev index 1 logs []
node 1 get valid append entry from 0
node 1 grant append rpc from 0, commit index 1, rf last included index -1 term -1, log [{0 1} {0 1}]
node 2 get append entry from 0 current term 1 arg term 1 rf commit 1 commit index 1 prev index 1 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 1, rf last included index -1 term -1, log [{0 1} {0 1}]
leader 0 append log index -1 to server 1 success, retry 1
node 0 try to commit 1 raft commit index 1
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 1 raft commit index 1
disconnect 1
leader 0 append entry 2 command 1
index 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log to server 2 prev index 1 entries [{1 1}], retry 1
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 1 commit index 1 prev index 1 logs [{1 1}]
node 2 get valid append entry from 0
node 2 append log from 0 args(i) 0 self(j) 2
node 2 append log from 0 log [{0 1} {0 1} {1 1}]
node 2 grant append rpc from 0, commit index 1, rf last included index -1 term -1, log [{0 1} {0 1} {1 1}]
leader 0 append log index 2 to server 2 success, retry 1
node 0 try to commit 2 raft commit index 1
node 0 commit index 2 log 1
applier get log {true 1 3 false [] 0 0} i 0
write cfg.log[0][3] 1
err_msg 
prevok true
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index 2 to server 1 timeout, retry 1
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 term 1 broadcast heartbeat 9
leader 0 append log to server 2 prev index 2 entries [], retry 1
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 1 commit index 2 prev index 2 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1}]
node 2 commit index 2 log 1
applier get log {true 1 3 false [] 0 0} i 2
write cfg.log[2][3] 1
err_msg 
prevok true
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 2 raft commit index 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index -1 to server 1 connection fail, retry 1
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index 2 to server 1 timeout, retry 2
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 3
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index -1 to server 1 timeout, retry 2
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 3
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 term 1 broadcast heartbeat 10
leader 0 append log to server 2 prev index 2 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 2 raft commit index 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index 2 to server 1 timeout, retry 3
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 4
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
node 1 wait for 1.011326238s
node 1 start leader election retry: 1
node 1 request vote RPC to 2 arg term 2 last index 1 last term 1
node 1 request vote RPC to 0 arg term 2 last index 1 last term 1
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index -1 to server 1 timeout, retry 3
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 4
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index 2 to server 1 timeout, retry 4
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 5
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 term 1 broadcast heartbeat 11
leader 0 append log to server 2 prev index 2 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 2 raft commit index 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
node 1 request vote RPC to 2 timeout
node 1 request vote RPC to 0 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 2 arg term 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index -1 to server 1 timeout, retry 4
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 5
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
node 1 start leader election retry: 2
node 1 request vote RPC to 2 arg term 3 last index 1 last term 1
node 1 request vote RPC to 0 arg term 3 last index 1 last term 1
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index 2 to server 1 timeout, retry 5
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 6
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 term 1 broadcast heartbeat 12
leader 0 append log to server 2 prev index 2 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 2 raft commit index 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index -1 to server 1 timeout, retry 5
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 6
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
node 1 request vote RPC to 2 timeout
node 1 request vote RPC to 0 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 3 arg term 3
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index 2 to server 1 timeout, retry 6
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 7
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
node 1 start leader election retry: 3
node 1 request vote RPC to 0 arg term 4 last index 1 last term 1
node 1 request vote RPC to 2 arg term 4 last index 1 last term 1
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 append log index -1 to server 1 timeout, retry 6
leader 0 append log to server 1 prev index 1 entries [{1 1}], retry 7
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
leader 0 term 1 broadcast heartbeat 13
leader 0 append log to server 2 prev index 2 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 2 raft commit index 2
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
check cfg.log[0][2] 0
check cfg.log[1][2] 0
check cfg.log[2][2] 0
commit time 2.002774278s
judge retry one(1)
leader 0 append entry 3 command 1
index 3
check cfg.log[0][3] 1
check cfg.log[1][3] <nil>
check cfg.log[2][3] 1
round 0 nn 12
leader 0 append entry 4 command 2
leader 0 append entry 5 command 3
leader 0 append entry 6 command 4
leader 0 append entry 7 command 5
leader 0 append entry 8 command 6
leader 0 append entry 9 command 7
leader 0 append entry 10 command 8
leader 0 append entry 11 command 9
leader 0 append entry 12 command 10
leader 0 append entry 13 command 11
leader 0 append entry 14 command 12
leader 0 append entry 15 command 13
leader 0 append entry 16 command 14
index 16
check cfg.log[0][16] <nil>
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
leader 0 append log to server 2 prev index 2 entries [{1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1}], retry 1
leader 0 append log to server 1 prev index 1 entries [{1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1}], retry 1
leader 0 append log to server 2 prev index 2 entries [{1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1}], retry 1
leader 0 append log to server 2 prev index 2 entries [{1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs [{1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1}]
node 2 get valid append entry from 0
leader 0 append log to server 1 prev index 1 entries [{1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}], retry 1
node 2 append log from 0 args(i) 0 self(j) 3
leader 0 append log to server 1 prev index 1 entries [{1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1}], retry 1
node 2 append log from 0 log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1}]
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1}]
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs [{1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1}]
node 2 get valid append entry from 0
leader 0 append log index 11 to server 2 success, retry 1
node 0 try to commit 11 raft commit index 2
node 0 commit index 3 log 1
node 2 append log from 0 args(i) 9 self(j) 12
node 0 commit index 4 log 2
applier get log {true 1 4 false [] 0 0} i 0
write cfg.log[0][4] 1
err_msg 
prevok true
applier get log {true 2 5 false [] 0 0} i 0
write cfg.log[0][5] 2
err_msg 
prevok true
node 0 commit index 5 log 3
node 0 commit index 6 log 4
applier get log {true 3 6 false [] 0 0} i 0
write cfg.log[0][6] 3
err_msg 
prevok true
applier get log {true 4 7 false [] 0 0} i 0
node 2 append log from 0 log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1}]
write cfg.log[0][7] 4
err_msg 
prevok true
node 0 commit index 7 log 5
node 0 commit index 8 log 6
applier get log {true 5 8 false [] 0 0} i 0
write cfg.log[0][8] 5
err_msg 
prevok true
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1}]
applier get log {true 6 9 false [] 0 0} i 0
write cfg.log[0][9] 6
err_msg 
prevok true
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 2 prev index 2 logs [{1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
node 2 get valid append entry from 0
node 0 commit index 9 log 7
applier get log {true 7 10 false [] 0 0} i 0
node 0 snapshot 8, rf last include index -1 term -1
write cfg.log[0][10] 7
err_msg 
prevok true
node 0 commit index 10 log 8
node 0 commit index 11 log 9
applier get log {true 8 11 false [] 0 0} i 0
write cfg.log[0][11] 8
err_msg 
prevok true
node 2 append log from 0 args(i) 13 self(j) 16
applier get log {true 9 12 false [] 0 0} i 0
write cfg.log[0][12] 9
err_msg 
prevok true
leader 0 append log index 15 to server 2 success, retry 1
node 0 try to commit 15 raft commit index 11
node 0 commit index 12 log 10
node 0 commit index 13 log 11
applier get log {true 10 13 false [] 0 0} i 0
write cfg.log[0][13] 10
err_msg 
prevok true
node 2 append log from 0 log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
applier get log {true 11 14 false [] 0 0} i 0
write cfg.log[0][14] 11
err_msg 
prevok true
node 0 commit index 14 log 12
node 2 grant append rpc from 0, commit index 2, rf last included index -1 term -1, log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
applier get log {true 12 15 false [] 0 0} i 0
write cfg.log[0][15] 12
err_msg 
prevok true
node 0 commit index 15 log 13
applier get log {true 13 16 false [] 0 0} i 0
write cfg.log[0][16] 13
err_msg 
prevok true
leader 0 append log index 16 to server 2 success, retry 1
node 0 try to commit 16 raft commit index 15
node 0 commit index 16 log 14
applier get log {true 14 17 false [] 0 0} i 0
write cfg.log[0][17] 14
err_msg 
prevok true
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
leader 0 append log index 2 to server 1 timeout, retry 7
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
node 1 request vote RPC to 2 timeout
node 1 request vote RPC to 0 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 4 arg term 4
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
leader 0 append log index -1 to server 1 timeout, retry 7
leader 0 invoke InstallSnapshotRPCToServer to 1 prevLogIndexOffset -8 logIndex -1
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
node 1 start leader election retry: 4
node 1 request vote RPC to 2 arg term 5 last index 1 last term 1
node 1 request vote RPC to 0 arg term 5 last index 1 last term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] <nil>
leader 0 term 1 broadcast heartbeat 14
leader 0 append log to server 2 prev index 16 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 2 commit index 16 prev index 16 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 16, rf last included index -1 term -1, log [{0 1} {0 1} {1 1} {1 1} {2 1} {3 1} {4 1} {5 1} {6 1} {7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
node 2 commit index 3 log 1
node 2 commit index 4 log 2
applier get log {true 1 4 false [] 0 0} i 2
write cfg.log[2][4] 1
err_msg 
prevok true
applier get log {true 2 5 false [] 0 0} i 2
write cfg.log[2][5] 2
err_msg 
prevok true
node 2 commit index 5 log 3
node 2 commit index 6 log 4
applier get log {true 3 6 false [] 0 0} i 2
write cfg.log[2][6] 3
err_msg 
prevok true
applier get log {true 4 7 false [] 0 0} i 2
write cfg.log[2][7] 4
err_msg 
prevok true
node 2 commit index 7 log 5
node 2 commit index 8 log 6
applier get log {true 5 8 false [] 0 0} i 2
write cfg.log[2][8] 5
err_msg 
prevok true
applier get log {true 6 9 false [] 0 0} i 2
write cfg.log[2][9] 6
err_msg 
prevok true
node 2 snapshot 8, rf last include index -1 term -1
node 2 commit index 9 log 7
applier get log {true 7 10 false [] 0 0} i 2
write cfg.log[2][10] 7
err_msg 
prevok true
node 2 commit index 10 log 8
node 2 commit index 11 log 9
applier get log {true 8 11 false [] 0 0} i 2
write cfg.log[2][11] 8
err_msg 
prevok true
applier get log {true 9 12 false [] 0 0} i 2
write cfg.log[2][12] 9
err_msg 
prevok true
node 2 commit index 12 log 10
node 2 commit index 13 log 11
applier get log {true 10 13 false [] 0 0} i 2
write cfg.log[2][13] 10
err_msg 
prevok true
applier get log {true 11 14 false [] 0 0} i 2
write cfg.log[2][14] 11
node 2 commit index 14 log 12
err_msg 
prevok true
applier get log {true 12 15 false [] 0 0} i 2
write cfg.log[2][15] 12
err_msg 
prevok true
node 2 commit index 15 log 13
node 2 commit index 16 log 14
applier get log {true 13 16 false [] 0 0} i 2
write cfg.log[2][16] 13
err_msg 
prevok true
applier get log {true 14 17 false [] 0 0} i 2
write cfg.log[2][17] 14
err_msg 
prevok true
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 16 raft commit index 16
leader 0 append log index 15 to server 1 timeout, retry 1
leader 0 append log index 16 to server 1 timeout, retry 1
leader 0 invoke InstallSnapshotRPCToServer to 1 prevLogIndexOffset -8 logIndex 16
leader 0 install snapshot to server 1 last included index 8 term 1
leader 0 append log index 11 to server 1 timeout, retry 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 1
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 request vote RPC to 0 timeout
node 1 request vote RPC to 2 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 5 arg term 5
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 start leader election retry: 5
node 1 request vote RPC to 2 arg term 6 last index 1 last term 1
node 1 request vote RPC to 0 arg term 6 last index 1 last term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 1
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 term 1 broadcast heartbeat 15
leader 0 append log to server 2 prev index 16 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 16 commit index 16 prev index 16 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 16, rf last included index 8 term 8, log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 16 raft commit index 16
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 2
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 request vote RPC to 2 timeout
node 1 request vote RPC to 0 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 6 arg term 6
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 2
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 start leader election retry: 6
node 1 request vote RPC to 0 arg term 7 last index 1 last term 1
node 1 request vote RPC to 2 arg term 7 last index 1 last term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 term 1 broadcast heartbeat 16
leader 0 append log to server 2 prev index 16 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 16 commit index 16 prev index 16 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 16, rf last included index 8 term 8, log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 16 raft commit index 16
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 3
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 3
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 request vote RPC to 2 timeout
node 1 request vote RPC to 0 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 7 arg term 7
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 start leader election retry: 7
node 1 request vote RPC to 2 arg term 8 last index 1 last term 1
node 1 request vote RPC to 0 arg term 8 last index 1 last term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 4
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 4
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 term 1 broadcast heartbeat 17
leader 0 append log to server 2 prev index 16 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 16 commit index 16 prev index 16 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 16, rf last included index 8 term 8, log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 16 raft commit index 16
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 connection fail, retry 5
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 request vote RPC to 0 timeout
node 1 request vote RPC to 2 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 8 arg term 8
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 start leader election retry: 8
node 1 request vote RPC to 0 arg term 9 last index 1 last term 1
node 1 request vote RPC to 2 arg term 9 last index 1 last term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 install snapshot to server 1 timeout, retry 5
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
leader 0 term 1 broadcast heartbeat 18
leader 0 append log to server 2 prev index 16 entries [], retry 1
node 2 get append entry from 0 current term 1 arg term 1 rf commit 16 commit index 16 prev index 16 logs []
node 2 get valid append entry from 0
node 2 grant append rpc from 0, commit index 16, rf last included index 8 term 8, log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1}]
leader 0 append log index -1 to server 2 success, retry 1
node 0 try to commit 16 raft commit index 16
leader 0 install snapshot to server 1 timeout, retry 6
leader 0 install snapshot to server 1 last included index 8 term 1
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
check cfg.log[0][16] 13
check cfg.log[1][16] <nil>
check cfg.log[2][16] 13
node 1 request vote RPC to 2 timeout
node 1 request vote RPC to 0 timeout
candidate 1 get vote 0
candidate 1 voteFor -2 current term 9 arg term 9
commit time 2.0043187s
judge retry one(14)
leader 0 append entry 17 command 14
index 17
check cfg.log[0][17] 14
check cfg.log[1][17] <nil>
check cfg.log[2][17] 14
reconnect 1
leader 0 invoke InstallSnapshotRPCToServer to 1 prevLogIndexOffset -8 logIndex 17
leader 0 install snapshot to server 1 last included index 8 term 1
leader 0 append log to server 2 prev index 16 entries [{14 1}], retry 1
leader 0 append entry 18 command 15
index 18
check cfg.log[0][18] <nil>
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 2 get append entry from 0 current term 1 arg term 1 rf commit 16 commit index 16 prev index 16 logs [{14 1}]
leader 0 invoke InstallSnapshotRPCToServer to 1 prevLogIndexOffset -8 logIndex 18
node 2 get valid append entry from 0
leader 0 append log to server 2 prev index 16 entries [{14 1} {15 1}], retry 1
leader 0 install snapshot to server 1 last included index 8 term 1
node 2 append log from 0 args(i) 0 self(j) 17
leader 0 install snapshot to server 1 success, retry 1
node 2 append log from 0 log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1} {14 1}]
node 2 grant append rpc from 0, commit index 16, rf last included index 8 term 8, log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1} {14 1}]
node 2 get append entry from 0 current term 1 arg term 1 rf commit 16 commit index 16 prev index 16 logs [{14 1} {15 1}]
node 2 get valid append entry from 0
leader 0 install snapshot to server 1 success, retry 1
leader 0 append log index 17 to server 2 success, retry 1
node 0 try to commit 17 raft commit index 16
leader 0 append log to server 1 prev index 8 entries [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1} {14 1} {15 1}], retry 2
node 0 commit index 17 log 14
applier get log {true 14 18 false [] 0 0} i 0
write cfg.log[0][18] 14
err_msg 
prevok true
node 2 append log from 0 args(i) 1 self(j) 18
node 2 append log from 0 log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1} {14 1} {15 1}]
node 2 grant append rpc from 0, commit index 16, rf last included index 8 term 8, log [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1} {14 1} {15 1}]
node 1 get append entry from 0 current term 9 arg term 1 rf commit 1 commit index 16 prev index 8 logs [{7 1} {8 1} {9 1} {10 1} {11 1} {12 1} {13 1} {14 1} {14 1} {15 1}]
leader 0 append log index 18 to server 2 success, retry 1
node 0 try to commit 18 raft commit index 17
node 0 commit index 18 log 15
leader 0 append log index 18 to server 1 fail, stale term 1 reply term 9, lost leadership, retry 2
applier get log {true 15 19 false [] 0 0} i 0
write cfg.log[0][19] 15
err_msg 
prevok true
node 0 snapshot 18, rf last include index 8 term 1
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
leader 0 install snapshot to server 1 timeout, retry 6
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 start leader election retry: 9
node 1 request vote RPC to 2 arg term 10 last index 1 last term 1
node 1 request vote RPC to 0 arg term 10 last index 1 last term 1
node 2 get request vote from 1 term 10 current term 1 last log index 1 last log term 1
node 0 get request vote from 1 term 10 current term 9 last log index 1 last log term 1
node 1 get reject vote from 0
node 1 get reject vote from 2
candidate 1 get vote 0
candidate 1 voteFor -2 current term 10 arg term 10
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 start leader election retry: 10
node 1 request vote RPC to 2 arg term 11 last index 1 last term 1
node 1 request vote RPC to 0 arg term 11 last index 1 last term 1
node 2 get request vote from 1 term 11 current term 10 last log index 1 last log term 1
node 0 get request vote from 1 term 11 current term 10 last log index 1 last log term 1
node 1 get reject vote from 2
node 1 get reject vote from 0
candidate 1 get vote 0
candidate 1 voteFor -2 current term 11 arg term 11
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
leader 0 install snapshot to server 1 timeout, retry 7
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 start leader election retry: 11
node 1 request vote RPC to 2 arg term 12 last index 1 last term 1
node 1 request vote RPC to 0 arg term 12 last index 1 last term 1
node 2 get request vote from 1 term 12 current term 11 last log index 1 last log term 1
node 0 get request vote from 1 term 12 current term 11 last log index 1 last log term 1
node 1 get reject vote from 2
node 1 get reject vote from 0
candidate 1 get vote 0
candidate 1 voteFor -2 current term 12 arg term 12
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 start leader election retry: 12
node 1 request vote RPC to 2 arg term 13 last index 1 last term 1
node 1 request vote RPC to 0 arg term 13 last index 1 last term 1
node 2 get request vote from 1 term 13 current term 12 last log index 1 last log term 1
node 0 get request vote from 1 term 13 current term 12 last log index 1 last log term 1
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 get reject vote from 0
node 1 get reject vote from 2
candidate 1 get vote 0
candidate 1 voteFor -2 current term 13 arg term 13
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 start leader election retry: 13
node 1 request vote RPC to 0 arg term 14 last index 1 last term 1
node 1 request vote RPC to 2 arg term 14 last index 1 last term 1
node 2 get request vote from 1 term 14 current term 13 last log index 1 last log term 1
node 0 get request vote from 1 term 14 current term 13 last log index 1 last log term 1
node 1 get reject vote from 2
node 1 get reject vote from 0
candidate 1 get vote 0
candidate 1 voteFor -2 current term 14 arg term 14
node 1 start leader election retry: 14
node 1 request vote RPC to 0 arg term 15 last index 1 last term 1
node 1 request vote RPC to 2 arg term 15 last index 1 last term 1
node 0 get request vote from 1 term 15 current term 14 last log index 1 last log term 1
node 2 get request vote from 1 term 15 current term 14 last log index 1 last log term 1
node 1 get reject vote from 0
node 1 get reject vote from 2
candidate 1 get vote 0
candidate 1 voteFor -2 current term 15 arg term 15
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
check cfg.log[0][18] 14
check cfg.log[1][18] <nil>
check cfg.log[2][18] <nil>
node 1 start leader election retry: 15
node 1 request vote RPC to 0 arg term 16 last index 1 last term 1
node 1 request vote RPC to 2 arg term 16 last index 1 last term 1
node 0 get request vote from 1 term 16 current term 15 last log index 1 last log term 1
node 2 get request vote from 1 term 16 current term 15 last log index 1 last log term 1
node 1 get reject vote from 0
node 1 get reject vote from 2
candidate 1 get vote 0
candidate 1 voteFor -2 current term 16 arg term 16
